grepl(x=NombreOrganismo_clean,pattern = 'universidad',fixed = T)  == T ~ "University",
grepl(x=NombreOrganismo_clean,pattern = 'goberna',fixed = T)  == T ~ "Regional Government",
grepl(x=NombreOrganismo_clean,pattern = 'gobierno regional',fixed = T)  == T ~ "Regional Government",
grepl(x=NombreOrganismo_clean,pattern = 'carabiner',fixed = T)  == T ~ "Police, Investigations",
grepl(x=NombreOrganismo_clean,pattern = 'investigaciones',fixed = T)  == T ~ "Police, Investigations",
grepl(x=NombreOrganismo_clean,pattern = 'gendarmer',fixed = T)  == T ~ "Police, Investigations",
grepl(x=NombreOrganismo_clean,pattern = 'junta nacional de jardines',fixed = T)  == T ~ "Child School Board",
grepl(x=NombreOrganismo_clean,pattern = 'ejército',fixed = T)  == T ~ "Army,Navy",
grepl(x=NombreOrganismo_clean,pattern = 'armada de chile',fixed = T)  == T ~ "Army,Navy",
TRUE~'Other'))
pre.summarybids=generateDfBidsSummary(bids = df)
#Indicators about missing data
df$MontoEstimado
#Filtering
df=df%>%filter(cantidadOferta==1&CantidadAdjudicada<=1)%>%filter(montoOferta>=10e6)
df=df%>%filter(MontoEstimado>thresholdSize)
#Create unique ID
df=df%>%mutate(id=paste0(Codigo,RutProveedor))
df.repetidos=df%>%group_by(id)%>%select(Codigo,Nombre,NombreOrganismo,montoOferta,NombreProveedor,FechaInicio)%>%mutate(n=length(NombreProveedor))%>%filter(n>1)
df=df%>%filter(!Codigo%in%(df.repetidos$Codigo))
#df.repetidos.3=df%>%group_by(id2)%>%select(Codigo,Nombre,NombreOrganismo,montoOferta,NombreProveedor,FechaInicio)%>%mutate(n=length(NombreProveedor))%>%filter(n>1)
save(df,file = 'C:\\repos\\learn-doing\\data\\contractData.Rdata')
post.summarybids=generateDfBidsSummary(bids = df)%>%create_kable(caption = 'Sample Descriptive Statistics')%>%cat(., file = "C:\\repos\\learn-doing\\thesis\\tables\\sample_descriptive.txt")
#Create Firm datasets
df.difs=df%>%filter(estadoOferta=='Aceptada')%>%group_by(Codigo)%>%arrange(montoOferta)%>%summarise(dif=(montoOferta[2]-montoOferta[1])/montoOferta[2],menorOferta=montoOferta[1],segundaMenorOferta=montoOferta[2])
df.wins=df%>%group_by(RutProveedor)%>%summarise(ofertas=length(winner),wins=length(winner[winner=='Seleccionada']),probWin=wins/ofertas)
df.names=df%>%dplyr::select(RutProveedor,NombreProveedor)%>%group_by(RutProveedor,NombreProveedor)%>%slice(1)
#Study how are the close wins
df.difs.ind=df.difs%>%mutate(isClose=ifelse(dif<0.005,yes='Close Win','No Close Win'))
df=df%>%left_join(df.difs.ind)
comparison.1=df%>%filter(isClose=='No Close Win')%>%generateDfBidsSummary()%>%dplyr::select('mean','std')%>%rename('mean_notClose'='mean','std_notClose'='std')
comparison.2=df%>%filter(isClose=='Close Win')%>%generateDfBidsSummary()%>%dplyr::select(name,'mean','std')%>%rename('mean_close'='mean','std_close'='std')%>%cbind(comparison.1)%>%select(name,mean_notClose,mean_close,std_notClose,std_close)
colnames(comparison.2)<-c('Variable','Mean (Not close win)','Mean (Close win)','Sd (Not close win)','Sd (Close win)')
create_kable(comparison.2,caption = "Comparison between close and non-close wins")
source('C:\\repos\\learn-doing\\R\\functions.R')
source('C:\\repos\\learn-doing\\R\\functions.R')
#Indicators about missing data
df$MontoEstimado
df$`Nombre producto genérico`
df$`Nombre producto genérico`%>%table()
c1$Listado
df%>%filter(`Nombre producto genérico`=='Licitación Pública de Obra')
df$tipoAdquisicion
table(df$tipoAdquisicion)
df = read_feather('C:\\repos\\learn-doing\\data\\lic_construccion_feather.feather') %>%
rename(estadoOferta=`Estado Oferta`,montoOferta = `Valor Total Ofertado`, winner = `Oferta seleccionada`,cantidadOferta=`Cantidad Ofertada`,tipoAdquisicion=`Tipo de Adquisición`)
table(df$tipoAdquisicion)
table/df$Rubro1
table(df$Rubro1)
table(df$Rubro2)
closeAllConnections()
#trey to use directly the search bar
site='https://www.mercadopublico.cl/Portal/Modules/Site/Busquedas/BuscadorAvanzado.aspx?qs=1'
session <- html_session(site)
library(readxl)
library(httr) ; library(jsonlite)
library(rvest)
library(tibble())
library(stringr)
#trey to use directly the search bar
site='https://www.mercadopublico.cl/Portal/Modules/Site/Busquedas/BuscadorAvanzado.aspx?qs=1'
session <- html_session(site)
blank_form=html_form(read_html(site))
filled_form=a[[1]]%>%set_values('txtSearch'='1896-63-O119')
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
submitted = submit_form(session,filled_form)
session_submit(session, filled_form, submit = NULL)
result <- session %>%html_nodes('#//*[@id="rptResultados_ctl01_lnkCodigo"]')
result <- session %>%html_nodes('#/\/*[@id="rptResultados_ctl01_lnkCodigo"]')
result <- session %>%html_nodes('#///*[@id="rptResultados_ctl01_lnkCodigo"]')
result <- session %>%html_nodes('#////*[@id="rptResultados_ctl01_lnkCodigo"]')
result <- session %>%html_nodes('#rptResultados_ctl01_lnkCodigo')
result
result <- session %>%html_nodes('#rptResultados_ctl01_lnkCodigo') %>% xml_attr("href")
result
read_html(session)
result <- session %>%html_node('#rptResultados_ctl01_lnkCodigo') %>% xml_attr("href")
result
session%>% %>% html_text()
session%>% html_text()
session%>% html_node()
result <- session %>%html_node('li')
result
result <- session %>%html_node('a')
result
result <- session %>%html_node('#rptResultados_ctl01_lnkCodigo')
result
result <- session %>%html_node('a')
result
result <- session %>%html_node('b')
result
result <- session %>%html_node('onlick')
result
session
result <- session %>%html_attrs()
result <- session %>%html_structure()
?html_structure
session %>%read_html()
Sys.setlocale("LC_ALL", "English")
session %>%read_html()
Sys.setlocale("LC_ALL", "Spanish")
session %>%read_html()
closeAllConnections()
session <- html_session(site)
result <- session %>%read_html()%>%html_structure()
blank_form=html_form(read_html(site))
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
submitted = submit_form(session,filled_form)
?session_submit
session_submit(session, filled_form, submit = NULL)
result <- submit_form(session, form)
submitted = submit_form(session,filled_form)
?submit_form
closeAllConnections()
#trey to use directly the search bar
site='https://www.mercadopublico.cl/Portal/Modules/Site/Busquedas/BuscadorAvanzado.aspx?qs=1'
session <- html_session(site)
blank_form=html_form(read_html(site))
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted
result <- session %>%read_html()%>%html_structure()
submitted%>% html_node('#rptResultados_ctl01_lnkCodigo')
result <- session %>%read_html()%>%html_structure()
submitted%>% html_structure()
submitted%>% read_html()%>%html_structure()
submitted%>% read_html()%>%html_nodes('#rptResultados_ctl01_lnkCodigo')
submitted%>% read_html()%>%html_nodes('//*[@id="rptResultados_ctl01_lnkCodigo"]')
submitted%>% read_html()%>%html_nodes('#rptResultados_ctl01_td1')
submitted%>% read_html()%>%html_structure()
submitted%>% read_html()%>%html_nodes('a')
submitted%>% read_html()%>%html_nodes('li')
submitted%>% read_html()%>%html_nodes('#lnkOtraBusqueda')
submitted
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
filled_form
submitted = submit_form(session,filled_form,submit = 'btnBusqdsueda')
submitted = submit_form(session,filled_form,submit = 'btnSearch')
result <- submitted %>%read_html()%>%html_structure()
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
submitted%>% read_html()%>%html_structure()
submitted = submit_form(session,filled_form,submit = 'btn asd')
submitted$url
submitted$forward
submitted$response
submitted$html
submitted$handle
filled_form
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted
result
closeAllConnections()
#trey to use directly the search bar
site='https://www.mercadopublico.cl/Portal/Modules/Site/Busquedas/BuscadorAvanzado.aspx?qs=1'
session <- html_session(site)
blank_form=html_form(read_html(site))
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted
result <- submitted %>%read_html()%>%html_structure()
result
result <- submitted %>%read_html()%>%html_structure()
result <- submitted %>%read_html()
result
result <- submitted %>%read_html()%>%html_structure()
submitted%>% read_html()%>%html_nodes('#rptResultados_ctl00_lblNombre')
filled_form
submitted = submit_form(session,filled_form,submit = 'Buscar')
submitted = submit_form(session,filled_form,submit = 'btnSearch1')
result <- submitted %>%read_html()%>%html_structure()
submitted%>% read_html()%>%html_nodes('#rptResultados_ctl00_lblNombre')
submitted%>% read_html()%>%html_nodes('##lblSubTitle')
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
submitted = submit_form(session,filled_form,submit = 'as')
submitted = submit_form(session,filled_form,submit = 'btnSearch2')
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
submitted = submit_form(session,filled_form,submit = '#btnBusqueda')
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted = submit_form(session,filled_form,submit = 'btnComprador')
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
filled_form
submitted
blank_form
filled_form=blank_form%>%set_values('txtSearch'='1896-63-O119')
filled_form=blank_form%>%set_values('txtSearch'='1896-63-O119')
blank_form[[]]
submitted%>% read_html()%>%html_nodes('#heaFecha > span:nth-child(1) > label:nth-child(2)')
submitted = submit_form(session,'filled_form',submit = 'btnComprador')
filled_form$name
filled_form$method
filled_form$url
filled_form$enctype
blank_form
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
submitted%>% read_html()%>%html_nodes('#heaFecha > span:nth-child(1) > label:nth-child(2)')
blank_form=html_form(read_html(submitted))
blank_form
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
submitted = submit_form(session,filled_form,submit = 'btnBusqueda')
submitted%>% read_html()%>%html_nodes('#heaFecha > span:nth-child(1) > label:nth-child(2)')
closeAllConnections()
blank_form=html_form(read_html(site))
filled_form=blank_form[[1]]%>%set_values('txtSearch'='1896-63-O119')
filled_form
submitted = submit_form(filled_form,submit = 'btnBusqueda')
submitted = submit_form(form=filled_form,submit = 'btnBusqueda')
session <- html_session(site)
submitted = submit_form(session=session,form=filled_form,submit = 'btnBusqueda')
submitted
submitted%>% read_html()%>%html_nodes('#lblSubTitle')
?submit_form
onlydcodes=df%>%group_by(CodigoExterno)%>%summarise(CodigoExterno=CodigoExterno[1])
library(readxl)
library(httr) ; library(jsonlite)
library(rvest)
library(tibble())
library(stringr)
library(feather)
library(magrittr)
library(dplyr)
library(lubridate)
library(ggplot2)
library(AER)
library(tidyr)
library(kableExtra)
library(stargazer)
library(sandwich)
library(skimr)
library(stargazer)
library(purrr)
library(broom)
onlydcodes=df%>%group_by(CodigoExterno)%>%summarise(CodigoExterno=CodigoExterno[1])
source('C:\\repos\\learn-doing\\R\\functions.R')
thresholdClose=0.005
thresholdSize=20e6
df = read_feather('C:\\repos\\learn-doing\\data\\lic_construccion_feather.feather') %>%
rename(estadoOferta=`Estado Oferta`,montoOferta = `Valor Total Ofertado`, winner = `Oferta seleccionada`,cantidadOferta=`Cantidad Ofertada`,tipoAdquisicion=`Tipo de Adquisición`)
#glimpse(df)
#skim(df)
#Accepted Offers? Be careful computing statistics, should not eliminate straight away. TODO:desert lics.
colnames(df)
#Cleaning
#df <- read.csv("C:/repos/public-procurement/bids.csv", encoding="CP1252")
df=df%>%mutate(FechaInicio=as.Date(FechaInicio))%>%mutate(year=year(FechaInicio),MCA_MPO=montoOferta/MontoEstimado)
df=df%>%mutate(year=as.numeric(year))%>%
mutate(NombreOrganismo_clean=tolower(NombreOrganismo))
df=df%>%mutate(TypeOrganism=case_when(grepl(x=NombreOrganismo_clean,pattern = 'munici',fixed = T)  == T ~ "Municipality",
grepl(x=NombreOrganismo_clean,pattern = 'ilustre',fixed = T)  == T ~ "Municipality",
grepl(x=NombreOrganismo_clean,pattern = 'serv',fixed = T)  == T ~ "Ministry",
grepl(x=NombreOrganismo_clean,pattern = 'minis',fixed = T)  == T ~ "Ministry",
grepl(x=NombreOrganismo_clean,pattern = 'subse',fixed = T)  == T ~ "Ministry",
grepl(x=NombreOrganismo_clean,pattern = 'dirección de obras hidráulicas',fixed = T)  == T ~ "Ministry",
grepl(x=NombreOrganismo_clean,pattern = 'universidad',fixed = T)  == T ~ "University",
grepl(x=NombreOrganismo_clean,pattern = 'goberna',fixed = T)  == T ~ "Regional Government",
grepl(x=NombreOrganismo_clean,pattern = 'gobierno regional',fixed = T)  == T ~ "Regional Government",
grepl(x=NombreOrganismo_clean,pattern = 'carabiner',fixed = T)  == T ~ "Police, Investigations",
grepl(x=NombreOrganismo_clean,pattern = 'investigaciones',fixed = T)  == T ~ "Police, Investigations",
grepl(x=NombreOrganismo_clean,pattern = 'gendarmer',fixed = T)  == T ~ "Police, Investigations",
grepl(x=NombreOrganismo_clean,pattern = 'junta nacional de jardines',fixed = T)  == T ~ "Child School Board",
grepl(x=NombreOrganismo_clean,pattern = 'ejército',fixed = T)  == T ~ "Army,Navy",
grepl(x=NombreOrganismo_clean,pattern = 'armada de chile',fixed = T)  == T ~ "Army,Navy",
TRUE~'Other'))
pre.summarybids=generateDfBidsSummary(bids = df)
#Indicators about missing data
#Filtering
df=df%>%filter(cantidadOferta==1&CantidadAdjudicada<=1)%>%filter(montoOferta>=thresholdSize/2)
df=df%>%filter(MontoEstimado>thresholdSize)
#Create unique ID
df=df%>%mutate(id=paste0(Codigo,RutProveedor))
df.repetidos=df%>%group_by(id)%>%select(Codigo,Nombre,NombreOrganismo,montoOferta,NombreProveedor,FechaInicio)%>%mutate(n=length(NombreProveedor))%>%filter(n>1)
df=df%>%filter(!Codigo%in%(df.repetidos$Codigo))
#df.repetidos.3=df%>%group_by(id2)%>%select(Codigo,Nombre,NombreOrganismo,montoOferta,NombreProveedor,FechaInicio)%>%mutate(n=length(NombreProveedor))%>%filter(n>1)
save(df,file = 'C:\\repos\\learn-doing\\data\\contractData.Rdata')
post.summarybids=generateDfBidsSummary(bids = df)
post.summarybids%>%create_kable(caption = 'Sample Descriptive Statistics')%>%cat(., file = "C:\\repos\\learn-doing\\thesis\\tables\\sample_descriptive.txt")
onlydcodes=df%>%group_by(CodigoExterno)%>%summarise(CodigoExterno=CodigoExterno[1])
listaids=(onlydcodes$CodigoExterno)
table.criteria=data.frame()
fails=data.frame()
table.criteria=data.frame()
for (h in seq(2501,length(listaids))) {
print(h)
if(h%%500==0){
print(table(table.criteria$Ítem))
save(table.criteria,file=paste0('C:\\repos\\learn-doing\\data\\table_criteria_incomplete_',h,'.Rdata'))}
possibleError <- tryCatch(
updatelist(listaids[h]),
error=function(e) e
)
if(inherits(possibleError, "error")){
fails=rbind(data.frame(h=h),fails)
next
}
if(!inherits(possibleError, "error")){
table.criteria=rbind(possibleError,table.criteria)}
}
contracts=data.frame()
bidders=data.frame()
fails=data.frame()
updatelist=function(idcheck){
path=paste0('http://api.mercadopublico.cl/servicios/v1/publico/licitaciones.json?codigo=',idcheck,'&ticket=93BA2B5A-B87E-487B-8E37-47CB6D7F5F82')
r <- GET(url = path)
c <- content(r)
urlActa=c$Listado[[1]]$Adjudicacion$UrlActa
#Intentar encontrar los criterios
identificador.licitacion=word(urlActa, 2, sep="qs=")
dirtabla=paste0('https://www.mercadopublico.cl/Procurement/Modules/RFB/DetailsAcquisition.aspx?qs=',identificador.licitacion)
pagina.base <- read_html(dirtabla)
table=pagina.base%>%html_nodes("#grvCriterios")%>%html_table()
table.criteria.iter=table[[1]]%>%as.data.frame()%>%mutate(Ítem=gsub(x=Ítem,pattern = '\n',replacement=''))%>%
mutate(Ítem=gsub(x=Ítem,pattern = '\r',replacement=''))%>%mutate(Ítem=gsub('[[:digit:]]+', '', Ítem))%>%mutate(Ítem=trimws(Ítem))%>%mutate(id=listaids[h])
return(table.criteria.iter)
#Antiguo
}
onlydcodes=df%>%group_by(CodigoExterno)%>%summarise(CodigoExterno=CodigoExterno[1])
listaids=(onlydcodes$CodigoExterno)
table.criteria=data.frame()
for (h in seq(2501,length(listaids))) {
print(h)
if(h%%500==0){
print(table(table.criteria$Ítem))
save(table.criteria,file=paste0('C:\\repos\\learn-doing\\data\\table_criteria_incomplete_',h,'.Rdata'))}
possibleError <- tryCatch(
updatelist(listaids[h]),
error=function(e) e
)
if(inherits(possibleError, "error")){
fails=rbind(data.frame(h=h),fails)
next
}
if(!inherits(possibleError, "error")){
table.criteria=rbind(possibleError,table.criteria)}
}
for (h in seq(2741,length(listaids))) {
print(h)
if(h%%500==0){
print(table(table.criteria$Ítem))
save(table.criteria,file=paste0('C:\\repos\\learn-doing\\data\\table_criteria_incomplete_',h,'.Rdata'))}
possibleError <- tryCatch(
updatelist(listaids[h]),
error=function(e) e
)
if(inherits(possibleError, "error")){
fails=rbind(data.frame(h=h),fails)
next
}
if(!inherits(possibleError, "error")){
table.criteria=rbind(possibleError,table.criteria)}
}
for (h in seq(2742,length(listaids))) {
print(h)
if(h%%500==0){
print(table(table.criteria$Ítem))
save(table.criteria,file=paste0('C:\\repos\\learn-doing\\data\\table_criteria_incomplete_',h,'.Rdata'))}
possibleError <- tryCatch(
updatelist(listaids[h]),
error=function(e) e
)
if(inherits(possibleError, "error")){
fails=rbind(data.frame(h=h),fails)
next
}
if(!inherits(possibleError, "error")){
table.criteria=rbind(possibleError,table.criteria)}
}
h
idcheck=listaids[h]
path=paste0('http://api.mercadopublico.cl/servicios/v1/publico/licitaciones.json?codigo=',idcheck,'&ticket=93BA2B5A-B87E-487B-8E37-47CB6D7F5F82')
r <- GET(url = path)
c <- content(r)
urlActa=c$Listado[[1]]$Adjudicacion$UrlActa
identificador.licitacion=word(urlActa, 2, sep="qs=")
dirtabla=paste0('https://www.mercadopublico.cl/Procurement/Modules/RFB/DetailsAcquisition.aspx?qs=',identificador.licitacion)
pagina.base <- read_html(dirtabla)
table=pagina.base%>%html_nodes("#grvCriterios")%>%html_table()
table[[1]]%>%as.data.frame()%>%mutate(Ítem=gsub(x=Ítem,pattern = '\n',replacement=''))%>%
mutate(Ítem=gsub(x=Ítem,pattern = '\r',replacement=''))%>%mutate(Ítem=gsub('[[:digit:]]+', '', Ítem))%>%mutate(Ítem=trimws(Ítem))%>%mutate(id=listaids[h])
for (h in seq(2741,length(listaids))) {
print(h)
if(h%%500==0){
print(table(table.criteria$Ítem))
save(table.criteria,file=paste0('C:\\repos\\learn-doing\\data\\table_criteria_incomplete_',h,'.Rdata'))}
possibleError <- tryCatch(
updatelist(listaids[h]),
error=function(e) e
)
if(inherits(possibleError, "error")){
fails=rbind(data.frame(h=h),fails)
next
}
if(!inherits(possibleError, "error")){
table.criteria=rbind(possibleError,table.criteria)}
}
for (h in seq(2866,8000)) {
print(h)
if(h%%500==0){
print(table(table.criteria$Ítem))
save(table.criteria,file=paste0('C:\\repos\\learn-doing\\data\\table_criteria_incomplete_',h,'.Rdata'))}
possibleError <- tryCatch(
updatelist(listaids[h]),
error=function(e) e
)
if(inherits(possibleError, "error")){
fails=rbind(data.frame(h=h),fails)
next
}
if(!inherits(possibleError, "error")){
table.criteria=rbind(possibleError,table.criteria)}
}
fails
nrow(fails)
fails$h
table.criteria$id
table.criteria$id%>%unique()%>%length()
c
e
nrow(fails)
fails
idcheck=listaids[7925]
path=paste0('http://api.mercadopublico.cl/servicios/v1/publico/licitaciones.json?codigo=',idcheck,'&ticket=93BA2B5A-B87E-487B-8E37-47CB6D7F5F82')
r <- GET(url = path)
c <- content(r)
urlActa=c$Listado[[1]]$Adjudicacion$UrlActa
urlActa
identificador.licitacion=word(urlActa, 2, sep="qs=")
dirtabla=paste0('https://www.mercadopublico.cl/Procurement/Modules/RFB/DetailsAcquisition.aspx?qs=',identificador.licitacion)
pagina.base <- read_html(dirtabla)
table=pagina.base%>%html_nodes("#grvCriterios")%>%html_table()
table
library(ggplot2)
library(readr)
library(dplyr)
library(magrittr)
library(dplyr)
library(tidyverse)
library(factoextra)
library(usa)
library(amerika)
library(ggrepel)
library(cowplot)
library(mixtools)
library(clValid)
library(mclust)
library(poliscidata)
library(kableExtra)
setwd('C:\\repos\\covid-measures-uml\\')
point_colors <- c(amerika_palettes$Republican[2],
amerika_palettes$Democrat[2])
#0. Extract Data and clean some columns. two URLs, for USA and the world.
#urlfile="https://raw.githubusercontent.com/OxCGRT/covid-policy-tracker/master/data/OxCGRT_latest.csv"
#0. Import and clean
urlfile.usa="https://raw.githubusercontent.com/OxCGRT/USA-covid-policy/master/data/OxCGRT_US_latest.csv"
urlfile.govs="https://raw.githubusercontent.com/CivilServiceUSA/us-governors/master/us-governors/data/us-governors.csv"
df <- read_csv(url(urlfile.usa)) %>% filter(!is.na(RegionName)) %>%
rename(date = Date) %>%
mutate(date = as.Date(as.character(date), format = '%Y%m%d'))
facts<-facts%>%select(name,population)
governors<-read_csv(url(urlfile.govs))%>%dplyr::select(1:7)
state_variables=facts%>%left_join(governors,by = c('name'='state_name'))%>%rename('RegionName'='name')
state_poliscidata=poliscidata::states%>%select(state,stateid,conpct_m,conserv_advantage,dempct_m)%>%mutate(state=trimws(as.character(state)),isRep=conpct_m>dempct_m,advantage=conpct_m-dempct_m)%>%as.data.frame()
state_variables=state_variables%>%left_join(state_poliscidata,by=c('RegionName'='state'))%>%
mutate(coincides=ifelse((party=='republican'&isRep)|(party=='democrat'&!isRep),1,0),
coincidesRobust=ifelse((party=='republican'&advantage<(-5))|(party=='democrat'&advantage>5),yes = 0,1))%>%mutate(leaning=ifelse(coincides==1,yes=party,no=ifelse(party=='republican',yes='democrat',no='republican')))
outliers=state_variables%>%filter(coincidesRobust==0)%>%select(RegionName,party,conpct_m,dempct_m,isRep,advantage,coincides,coincidesRobust)
##Merge with US data from USA package. Use library(usa)
df=df%>%left_join(facts,by = c('RegionName'='name'))%>%mutate(deaths_1000=ConfirmedDeaths/(population*1000),cases_1000=ConfirmedCases/(population*1000))
df=df%>%left_join(governors,by = c('RegionName'='state_name'))
#1. Create Datasets
##Define Types of Measures
containment_measures=c('C1_School closing','C2_Workplace closing','C3_Cancel public events','C4_Restrictions on gatherings',
'C5_Close public transport','C6_Stay at home requirements','C7_Restrictions on internal movement',
'C8_International travel controls')
economic_measures=c('E1_Income support','E2_Debt/contract relief','E3_Fiscal measures')
health_measures=c('H1_Public information campaigns','H2_Testing policy','H3_Contact tracing','H4_Emergency investment in healthcare',
'H5_Investment in vaccines','H6_Facial Coverings',
'H8_Protection of elderly people')
country_variables=c('CountryName','CountryCode','RegionName','Date')
outcome_variables=c('ConfirmedDeaths','ConfirmedCases')
df.measures=df[,c("RegionName","date",containment_measures,economic_measures,health_measures)]
##Get the date with the top number of new deaths for each state
df.maxdeaths = df %>% group_by(RegionName) %>% mutate(newdeaths = ConfirmedDeaths -
lag(ConfirmedDeaths, order_by = date)) %>%
select(RegionName, date, newdeaths) %>% slice_max(n = 1, order_by = newdeaths) %>%
arrange(-newdeaths) %>%
filter(!is.na(RegionName)) %>% rename(date.max = date) %>%
mutate(date.min30 = date.max - 30, date.plus30 = date.max + 30)
##Get the policy measures for 30 days before and after the max date.
df.aroundpeak=df.measures%>%left_join(df.maxdeaths,by = 'RegionName')%>%filter(date>date.min30&date<date.plus30)
##Get mean and max levels of each measure across that timeframe
df.aroundpeak.meanmeasures = df.aroundpeak %>% group_by(RegionName) %>% summarise_if(is.numeric, mean, na.rm = TRUE) %>%
mutate(across(where(is.numeric), round, 3))
df.aroundpeak.maxmeasures = df.aroundpeak %>% group_by(RegionName) %>% summarise_if(is.numeric, max, na.rm = TRUE) %>%
mutate(across(where(is.numeric), round, 3))
#save(df.aroundpeak.meanmeasures,row.names = F,file="C:\\repos\\covid-measures-uml\\MeasuresUSA.Rdata")
##write.csv(df.aroundpeak.meanmeasures,row.names = F,file="C:\\repos\\covid-measures-uml\\MeasuresUSA.csv")
##Show when each state had its peak and how much was it.
ggplot(df.aroundpeak,aes(x=date,y=newdeaths))+geom_line(aes(color=RegionName))+scale_y_log10()+theme_bw()+ylab('Peak Deaths')+geom_label(aes(label=RegionName))
df.aroundpeak
df.aroundpeak.meanmeasures
ggplot(df.aroundpeak,aes(x=date,y=newdeaths))+geom_line(aes())+scale_y_log10()+theme_bw()+ylab('Peak Deaths')+geom_label(aes(x=median(date),label=RegionName))
paround=ggplot(df.aroundpeak,aes(x=date,y=newdeaths))+geom_line(aes())+scale_y_log10()+theme_bw()+ylab('Peak Deaths')+geom_label(aes(x=median(date),label=RegionName))
df.maxdeaths
paround=ggplot(df.maxdeaths,aes(x=date,y=newdeaths))+scale_y_log10()+theme_bw()+ylab('Peak Deaths')+geom_label(aes(x=date.max,label=RegionName,y=newdeaths))
paround
paround=ggplot(df.maxdeaths,aes(x=date,y=newdeaths))+scale_y_log10()+theme_bw()+ylab('Peak Deaths')+geom_label_repel(aes(x=date.max,label=RegionName,y=newdeaths))
paround
df.maxdeaths
View(df.maxdeaths)
